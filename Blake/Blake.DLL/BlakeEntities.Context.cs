//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Blake.DLL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class BlakeEntities : DbContext
    {
        public BlakeEntities()
            : base("name=BlakeEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Account> Accounts { get; set; }
        public virtual DbSet<Person> Persons { get; set; }
        public virtual DbSet<Transaction> Transactions { get; set; }
    
        public virtual ObjectResult<Search_Person_Result> Search_Person(string stringParam)
        {
            var stringParamParameter = stringParam != null ?
                new ObjectParameter("stringParam", stringParam) :
                new ObjectParameter("stringParam", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Search_Person_Result>("Search_Person", stringParamParameter);
        }
    
        public virtual ObjectResult<GetPersonAccounts_Result> GetPersonAccounts(Nullable<int> code)
        {
            var codeParameter = code.HasValue ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPersonAccounts_Result>("GetPersonAccounts", codeParameter);
        }
    
        public virtual ObjectResult<GetPersons_Result> GetPersons(Nullable<int> pageSize, Nullable<int> pageNumber, string searchString)
        {
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var searchStringParameter = searchString != null ?
                new ObjectParameter("SearchString", searchString) :
                new ObjectParameter("SearchString", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPersons_Result>("GetPersons", pageSizeParameter, pageNumberParameter, searchStringParameter);
        }
    
        public virtual ObjectResult<GetPersonById_Result> GetPersonById(Nullable<int> code)
        {
            var codeParameter = code.HasValue ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPersonById_Result>("GetPersonById", codeParameter);
        }
    
        public virtual ObjectResult<GetTransaction_Result> GetTransaction(Nullable<int> code)
        {
            var codeParameter = code.HasValue ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTransaction_Result>("GetTransaction", codeParameter);
        }
    
        public virtual ObjectResult<GetAccount_Result> GetAccount(Nullable<int> code)
        {
            var codeParameter = code.HasValue ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAccount_Result>("GetAccount", codeParameter);
        }
    }
}
